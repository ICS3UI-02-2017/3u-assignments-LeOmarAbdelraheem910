/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FINAL_ASSIGNMENT;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import javax.swing.Timer;
import sun.audio.AudioPlayer;
import sun.audio.AudioStream;

/**
 *
 * @author Omar
 */
public class PeriodicTableMemoryGame extends javax.swing.JFrame implements ActionListener {

    //Game Variables:
    //Initialize a game timer that will be used to run the game.
    Timer gameTimer;

    //Create variables for the reading and playing of music. These will also allow the music to be stopped later.
    InputStream music;
    AudioStream audio;

    //End of Game Variables.
    /**
     * Creates new form PeriodicTableMemoryGame
     */
    public PeriodicTableMemoryGame() {
        initComponents();

        //Set the length of the game timer or how long it will run with each loop.
        gameTimer = new Timer(1000, this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        Hydrogen = new javax.swing.JTextField();
        Lithium = new javax.swing.JTextField();
        Sodium = new javax.swing.JTextField();
        Potassium = new javax.swing.JTextField();
        Rubidium = new javax.swing.JTextField();
        Cesium = new javax.swing.JTextField();
        Francium = new javax.swing.JTextField();
        Radium = new javax.swing.JTextField();
        Barium = new javax.swing.JTextField();
        Strontium = new javax.swing.JTextField();
        Calcium = new javax.swing.JTextField();
        Magnesium = new javax.swing.JTextField();
        Beryllium = new javax.swing.JTextField();
        Scandium = new javax.swing.JTextField();
        Yttrium = new javax.swing.JTextField();
        Vanadium = new javax.swing.JTextField();
        Niobium = new javax.swing.JTextField();
        Tantalum = new javax.swing.JTextField();
        Dubnium = new javax.swing.JTextField();
        Chromium = new javax.swing.JTextField();
        Manganese = new javax.swing.JTextField();
        Cobalt = new javax.swing.JTextField();
        Molybdenum = new javax.swing.JTextField();
        Technetium = new javax.swing.JTextField();
        Rhodium = new javax.swing.JTextField();
        Tungsten = new javax.swing.JTextField();
        Rhenium = new javax.swing.JTextField();
        Iridium = new javax.swing.JTextField();
        Seaborgium = new javax.swing.JTextField();
        Borhium = new javax.swing.JTextField();
        Meitnerium = new javax.swing.JTextField();
        Darmstadtium = new javax.swing.JTextField();
        Platnium = new javax.swing.JTextField();
        Palladium = new javax.swing.JTextField();
        Nickel = new javax.swing.JTextField();
        Titanium = new javax.swing.JTextField();
        Iron = new javax.swing.JTextField();
        Ziconium = new javax.swing.JTextField();
        Hafnium = new javax.swing.JTextField();
        Rutherfordium = new javax.swing.JTextField();
        Ruthenium = new javax.swing.JTextField();
        Osmium = new javax.swing.JTextField();
        Hassium = new javax.swing.JTextField();
        Copper = new javax.swing.JTextField();
        Silver = new javax.swing.JTextField();
        Gold = new javax.swing.JTextField();
        Roentgenium = new javax.swing.JTextField();
        Zinc = new javax.swing.JTextField();
        Cadmium = new javax.swing.JTextField();
        Mercury = new javax.swing.JTextField();
        Copermicium = new javax.swing.JTextField();
        Galium = new javax.swing.JTextField();
        Germanium = new javax.swing.JTextField();
        Indium = new javax.swing.JTextField();
        Tin = new javax.swing.JTextField();
        Thallium = new javax.swing.JTextField();
        Lead = new javax.swing.JTextField();
        Nihonium = new javax.swing.JTextField();
        Flerovium = new javax.swing.JTextField();
        Moscovium = new javax.swing.JTextField();
        Livermorium = new javax.swing.JTextField();
        Bismuth = new javax.swing.JTextField();
        Polonium = new javax.swing.JTextField();
        Antimony = new javax.swing.JTextField();
        Tellurium = new javax.swing.JTextField();
        Iodine = new javax.swing.JTextField();
        Astatine = new javax.swing.JTextField();
        Tennessine = new javax.swing.JTextField();
        Xenon = new javax.swing.JTextField();
        Radon = new javax.swing.JTextField();
        Oganesson = new javax.swing.JTextField();
        Fluorine = new javax.swing.JTextField();
        Neon = new javax.swing.JTextField();
        Helium = new javax.swing.JTextField();
        Oxygen = new javax.swing.JTextField();
        Nitrogen = new javax.swing.JTextField();
        Silicon = new javax.swing.JTextField();
        Carbon = new javax.swing.JTextField();
        Aluminium = new javax.swing.JTextField();
        Boron = new javax.swing.JTextField();
        Lanthanum = new javax.swing.JTextField();
        Cerium = new javax.swing.JTextField();
        Praseodymium = new javax.swing.JTextField();
        Neodymium = new javax.swing.JTextField();
        Promethium = new javax.swing.JTextField();
        Samarium = new javax.swing.JTextField();
        Europium = new javax.swing.JTextField();
        Gadolinium = new javax.swing.JTextField();
        Terbium = new javax.swing.JTextField();
        Dysprosium = new javax.swing.JTextField();
        Holmium = new javax.swing.JTextField();
        Erbium = new javax.swing.JTextField();
        Thullium = new javax.swing.JTextField();
        Ytterbium = new javax.swing.JTextField();
        Lutetium = new javax.swing.JTextField();
        Actinium = new javax.swing.JTextField();
        Thorium = new javax.swing.JTextField();
        Protactinium = new javax.swing.JTextField();
        Uranium = new javax.swing.JTextField();
        Neptunium = new javax.swing.JTextField();
        Plutonium = new javax.swing.JTextField();
        Americium = new javax.swing.JTextField();
        Curium = new javax.swing.JTextField();
        Berkelium = new javax.swing.JTextField();
        Californium = new javax.swing.JTextField();
        Einsteinium = new javax.swing.JTextField();
        Fermium = new javax.swing.JTextField();
        Mendelevium = new javax.swing.JTextField();
        Nobelium = new javax.swing.JTextField();
        Lawrencium = new javax.swing.JTextField();
        Arsenic = new javax.swing.JTextField();
        Selenium = new javax.swing.JTextField();
        Bromine = new javax.swing.JTextField();
        Krypton = new javax.swing.JTextField();
        Phosphorus = new javax.swing.JTextField();
        Chlorine = new javax.swing.JTextField();
        Sulfur = new javax.swing.JTextField();
        Argon = new javax.swing.JTextField();
        elementNameHere = new javax.swing.JTextField();
        timer = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        startChallenge = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jlabelidk = new javax.swing.JLabel();
        score = new javax.swing.JLabel();
        aHint = new javax.swing.JLabel();
        aTip = new javax.swing.JLabel();
        abortChallenge = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("The Periodic Table Memory Game!");
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jTextField1.setEditable(false);
        jTextField1.setBackground(new java.awt.Color(0, 0, 0));
        jTextField1.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(255, 255, 255));
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("57 -->71");
        jTextField1.setPreferredSize(new java.awt.Dimension(50, 50));
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextField2.setEditable(false);
        jTextField2.setBackground(new java.awt.Color(0, 0, 0));
        jTextField2.setFont(new java.awt.Font("Berlin Sans FB", 0, 12)); // NOI18N
        jTextField2.setForeground(new java.awt.Color(255, 255, 255));
        jTextField2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField2.setText("89-->103");
        jTextField2.setPreferredSize(new java.awt.Dimension(50, 50));
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        Hydrogen.setEditable(false);
        Hydrogen.setBackground(new java.awt.Color(0, 0, 0));
        Hydrogen.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Hydrogen.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Hydrogen.setText("H");
        Hydrogen.setPreferredSize(new java.awt.Dimension(50, 50));
        Hydrogen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HydrogenActionPerformed(evt);
            }
        });

        Lithium.setEditable(false);
        Lithium.setBackground(new java.awt.Color(0, 0, 0));
        Lithium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Lithium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Lithium.setText("Li");
        Lithium.setPreferredSize(new java.awt.Dimension(50, 50));
        Lithium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LithiumActionPerformed(evt);
            }
        });

        Sodium.setEditable(false);
        Sodium.setBackground(new java.awt.Color(0, 0, 0));
        Sodium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Sodium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Sodium.setText("Na");
        Sodium.setPreferredSize(new java.awt.Dimension(50, 50));
        Sodium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SodiumActionPerformed(evt);
            }
        });

        Potassium.setEditable(false);
        Potassium.setBackground(new java.awt.Color(0, 0, 0));
        Potassium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Potassium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Potassium.setText("K");
        Potassium.setPreferredSize(new java.awt.Dimension(50, 50));
        Potassium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PotassiumActionPerformed(evt);
            }
        });

        Rubidium.setEditable(false);
        Rubidium.setBackground(new java.awt.Color(0, 0, 0));
        Rubidium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Rubidium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Rubidium.setText("Rb");
        Rubidium.setPreferredSize(new java.awt.Dimension(50, 50));
        Rubidium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RubidiumActionPerformed(evt);
            }
        });

        Cesium.setEditable(false);
        Cesium.setBackground(new java.awt.Color(0, 0, 0));
        Cesium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Cesium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Cesium.setText("Cs");
        Cesium.setPreferredSize(new java.awt.Dimension(50, 50));
        Cesium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CesiumActionPerformed(evt);
            }
        });

        Francium.setEditable(false);
        Francium.setBackground(new java.awt.Color(0, 0, 0));
        Francium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Francium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Francium.setText("Fr");
        Francium.setPreferredSize(new java.awt.Dimension(50, 50));
        Francium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FranciumActionPerformed(evt);
            }
        });

        Radium.setEditable(false);
        Radium.setBackground(new java.awt.Color(0, 0, 0));
        Radium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Radium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Radium.setText("Ra");
        Radium.setPreferredSize(new java.awt.Dimension(50, 50));
        Radium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RadiumActionPerformed(evt);
            }
        });

        Barium.setEditable(false);
        Barium.setBackground(new java.awt.Color(0, 0, 0));
        Barium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Barium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Barium.setText("Ba");
        Barium.setPreferredSize(new java.awt.Dimension(50, 50));
        Barium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BariumActionPerformed(evt);
            }
        });

        Strontium.setEditable(false);
        Strontium.setBackground(new java.awt.Color(0, 0, 0));
        Strontium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Strontium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Strontium.setText("Sr");
        Strontium.setPreferredSize(new java.awt.Dimension(50, 50));
        Strontium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StrontiumActionPerformed(evt);
            }
        });

        Calcium.setEditable(false);
        Calcium.setBackground(new java.awt.Color(0, 0, 0));
        Calcium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Calcium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Calcium.setText("Ca");
        Calcium.setPreferredSize(new java.awt.Dimension(50, 50));
        Calcium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CalciumActionPerformed(evt);
            }
        });

        Magnesium.setEditable(false);
        Magnesium.setBackground(new java.awt.Color(0, 0, 0));
        Magnesium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Magnesium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Magnesium.setText("Mg");
        Magnesium.setPreferredSize(new java.awt.Dimension(50, 50));
        Magnesium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MagnesiumActionPerformed(evt);
            }
        });

        Beryllium.setEditable(false);
        Beryllium.setBackground(new java.awt.Color(0, 0, 0));
        Beryllium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Beryllium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Beryllium.setText("Be");
        Beryllium.setPreferredSize(new java.awt.Dimension(50, 50));
        Beryllium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BerylliumActionPerformed(evt);
            }
        });

        Scandium.setEditable(false);
        Scandium.setBackground(new java.awt.Color(0, 0, 0));
        Scandium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Scandium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Scandium.setText("Sc");
        Scandium.setPreferredSize(new java.awt.Dimension(50, 50));
        Scandium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ScandiumActionPerformed(evt);
            }
        });

        Yttrium.setEditable(false);
        Yttrium.setBackground(new java.awt.Color(0, 0, 0));
        Yttrium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Yttrium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Yttrium.setText("Y");
        Yttrium.setPreferredSize(new java.awt.Dimension(50, 50));
        Yttrium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                YttriumActionPerformed(evt);
            }
        });

        Vanadium.setEditable(false);
        Vanadium.setBackground(new java.awt.Color(0, 0, 0));
        Vanadium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Vanadium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Vanadium.setText("V");
        Vanadium.setPreferredSize(new java.awt.Dimension(50, 50));
        Vanadium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VanadiumActionPerformed(evt);
            }
        });

        Niobium.setEditable(false);
        Niobium.setBackground(new java.awt.Color(0, 0, 0));
        Niobium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Niobium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Niobium.setText("Nb");
        Niobium.setPreferredSize(new java.awt.Dimension(50, 50));
        Niobium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NiobiumActionPerformed(evt);
            }
        });

        Tantalum.setEditable(false);
        Tantalum.setBackground(new java.awt.Color(0, 0, 0));
        Tantalum.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Tantalum.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Tantalum.setText("Ta");
        Tantalum.setPreferredSize(new java.awt.Dimension(50, 50));
        Tantalum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TantalumActionPerformed(evt);
            }
        });

        Dubnium.setEditable(false);
        Dubnium.setBackground(new java.awt.Color(0, 0, 0));
        Dubnium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Dubnium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Dubnium.setText("Db");
        Dubnium.setPreferredSize(new java.awt.Dimension(50, 50));
        Dubnium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DubniumActionPerformed(evt);
            }
        });

        Chromium.setEditable(false);
        Chromium.setBackground(new java.awt.Color(0, 0, 0));
        Chromium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Chromium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Chromium.setText("Cr");
        Chromium.setPreferredSize(new java.awt.Dimension(50, 50));
        Chromium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChromiumActionPerformed(evt);
            }
        });

        Manganese.setEditable(false);
        Manganese.setBackground(new java.awt.Color(0, 0, 0));
        Manganese.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Manganese.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Manganese.setText("Mn");
        Manganese.setPreferredSize(new java.awt.Dimension(50, 50));
        Manganese.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ManganeseActionPerformed(evt);
            }
        });

        Cobalt.setEditable(false);
        Cobalt.setBackground(new java.awt.Color(0, 0, 0));
        Cobalt.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Cobalt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Cobalt.setText("Co");
        Cobalt.setPreferredSize(new java.awt.Dimension(50, 50));
        Cobalt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CobaltActionPerformed(evt);
            }
        });

        Molybdenum.setEditable(false);
        Molybdenum.setBackground(new java.awt.Color(0, 0, 0));
        Molybdenum.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Molybdenum.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Molybdenum.setText("Mo");
        Molybdenum.setPreferredSize(new java.awt.Dimension(50, 50));
        Molybdenum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MolybdenumActionPerformed(evt);
            }
        });

        Technetium.setEditable(false);
        Technetium.setBackground(new java.awt.Color(0, 0, 0));
        Technetium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Technetium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Technetium.setText("Tc");
        Technetium.setPreferredSize(new java.awt.Dimension(50, 50));
        Technetium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TechnetiumActionPerformed(evt);
            }
        });

        Rhodium.setEditable(false);
        Rhodium.setBackground(new java.awt.Color(0, 0, 0));
        Rhodium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Rhodium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Rhodium.setText("Rh");
        Rhodium.setPreferredSize(new java.awt.Dimension(50, 50));
        Rhodium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RhodiumActionPerformed(evt);
            }
        });

        Tungsten.setEditable(false);
        Tungsten.setBackground(new java.awt.Color(0, 0, 0));
        Tungsten.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Tungsten.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Tungsten.setText("W");
        Tungsten.setPreferredSize(new java.awt.Dimension(50, 50));
        Tungsten.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TungstenActionPerformed(evt);
            }
        });

        Rhenium.setEditable(false);
        Rhenium.setBackground(new java.awt.Color(0, 0, 0));
        Rhenium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Rhenium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Rhenium.setText("Re");
        Rhenium.setPreferredSize(new java.awt.Dimension(50, 50));
        Rhenium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RheniumActionPerformed(evt);
            }
        });

        Iridium.setEditable(false);
        Iridium.setBackground(new java.awt.Color(0, 0, 0));
        Iridium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Iridium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Iridium.setText("Ir");
        Iridium.setPreferredSize(new java.awt.Dimension(50, 50));
        Iridium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IridiumActionPerformed(evt);
            }
        });

        Seaborgium.setEditable(false);
        Seaborgium.setBackground(new java.awt.Color(0, 0, 0));
        Seaborgium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Seaborgium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Seaborgium.setText("Sg");
        Seaborgium.setPreferredSize(new java.awt.Dimension(50, 50));
        Seaborgium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SeaborgiumActionPerformed(evt);
            }
        });

        Borhium.setEditable(false);
        Borhium.setBackground(new java.awt.Color(0, 0, 0));
        Borhium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Borhium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Borhium.setText("Bh");
        Borhium.setPreferredSize(new java.awt.Dimension(50, 50));
        Borhium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BorhiumActionPerformed(evt);
            }
        });

        Meitnerium.setEditable(false);
        Meitnerium.setBackground(new java.awt.Color(0, 0, 0));
        Meitnerium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Meitnerium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Meitnerium.setText("Mt");
        Meitnerium.setPreferredSize(new java.awt.Dimension(50, 50));
        Meitnerium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MeitneriumActionPerformed(evt);
            }
        });

        Darmstadtium.setEditable(false);
        Darmstadtium.setBackground(new java.awt.Color(0, 0, 0));
        Darmstadtium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Darmstadtium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Darmstadtium.setText("Ds");
        Darmstadtium.setPreferredSize(new java.awt.Dimension(50, 50));
        Darmstadtium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DarmstadtiumActionPerformed(evt);
            }
        });

        Platnium.setEditable(false);
        Platnium.setBackground(new java.awt.Color(0, 0, 0));
        Platnium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Platnium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Platnium.setText("Pt");
        Platnium.setPreferredSize(new java.awt.Dimension(50, 50));
        Platnium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlatniumActionPerformed(evt);
            }
        });

        Palladium.setEditable(false);
        Palladium.setBackground(new java.awt.Color(0, 0, 0));
        Palladium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Palladium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Palladium.setText("Pd");
        Palladium.setPreferredSize(new java.awt.Dimension(50, 50));
        Palladium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PalladiumActionPerformed(evt);
            }
        });

        Nickel.setEditable(false);
        Nickel.setBackground(new java.awt.Color(0, 0, 0));
        Nickel.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Nickel.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Nickel.setText("Ni");
        Nickel.setPreferredSize(new java.awt.Dimension(50, 50));
        Nickel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NickelActionPerformed(evt);
            }
        });

        Titanium.setEditable(false);
        Titanium.setBackground(new java.awt.Color(0, 0, 0));
        Titanium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Titanium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Titanium.setText("Ti");
        Titanium.setPreferredSize(new java.awt.Dimension(50, 50));
        Titanium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TitaniumActionPerformed(evt);
            }
        });

        Iron.setEditable(false);
        Iron.setBackground(new java.awt.Color(0, 0, 0));
        Iron.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Iron.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Iron.setText("Fe");
        Iron.setPreferredSize(new java.awt.Dimension(50, 50));
        Iron.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IronActionPerformed(evt);
            }
        });

        Ziconium.setEditable(false);
        Ziconium.setBackground(new java.awt.Color(0, 0, 0));
        Ziconium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Ziconium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Ziconium.setText("Zr");
        Ziconium.setPreferredSize(new java.awt.Dimension(50, 50));
        Ziconium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ZiconiumActionPerformed(evt);
            }
        });

        Hafnium.setEditable(false);
        Hafnium.setBackground(new java.awt.Color(0, 0, 0));
        Hafnium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Hafnium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Hafnium.setText("Hf");
        Hafnium.setPreferredSize(new java.awt.Dimension(50, 50));
        Hafnium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HafniumActionPerformed(evt);
            }
        });

        Rutherfordium.setEditable(false);
        Rutherfordium.setBackground(new java.awt.Color(0, 0, 0));
        Rutherfordium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Rutherfordium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Rutherfordium.setText("Rf");
        Rutherfordium.setPreferredSize(new java.awt.Dimension(50, 50));
        Rutherfordium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RutherfordiumActionPerformed(evt);
            }
        });

        Ruthenium.setEditable(false);
        Ruthenium.setBackground(new java.awt.Color(0, 0, 0));
        Ruthenium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Ruthenium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Ruthenium.setText("Ru");
        Ruthenium.setPreferredSize(new java.awt.Dimension(50, 50));
        Ruthenium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RutheniumActionPerformed(evt);
            }
        });

        Osmium.setEditable(false);
        Osmium.setBackground(new java.awt.Color(0, 0, 0));
        Osmium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Osmium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Osmium.setText("Os");
        Osmium.setPreferredSize(new java.awt.Dimension(50, 50));
        Osmium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OsmiumActionPerformed(evt);
            }
        });

        Hassium.setEditable(false);
        Hassium.setBackground(new java.awt.Color(0, 0, 0));
        Hassium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Hassium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Hassium.setText("Hs");
        Hassium.setPreferredSize(new java.awt.Dimension(50, 50));
        Hassium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HassiumActionPerformed(evt);
            }
        });

        Copper.setEditable(false);
        Copper.setBackground(new java.awt.Color(0, 0, 0));
        Copper.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Copper.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Copper.setText("Cu");
        Copper.setPreferredSize(new java.awt.Dimension(50, 50));
        Copper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CopperActionPerformed(evt);
            }
        });

        Silver.setEditable(false);
        Silver.setBackground(new java.awt.Color(0, 0, 0));
        Silver.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Silver.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Silver.setText("Ag");
        Silver.setPreferredSize(new java.awt.Dimension(50, 50));
        Silver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SilverActionPerformed(evt);
            }
        });

        Gold.setEditable(false);
        Gold.setBackground(new java.awt.Color(0, 0, 0));
        Gold.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Gold.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Gold.setText("Au");
        Gold.setPreferredSize(new java.awt.Dimension(50, 50));
        Gold.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GoldActionPerformed(evt);
            }
        });

        Roentgenium.setEditable(false);
        Roentgenium.setBackground(new java.awt.Color(0, 0, 0));
        Roentgenium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Roentgenium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Roentgenium.setText("Rg");
        Roentgenium.setPreferredSize(new java.awt.Dimension(50, 50));
        Roentgenium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RoentgeniumActionPerformed(evt);
            }
        });

        Zinc.setEditable(false);
        Zinc.setBackground(new java.awt.Color(0, 0, 0));
        Zinc.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Zinc.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Zinc.setText("Zn");
        Zinc.setPreferredSize(new java.awt.Dimension(50, 50));
        Zinc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ZincActionPerformed(evt);
            }
        });

        Cadmium.setEditable(false);
        Cadmium.setBackground(new java.awt.Color(0, 0, 0));
        Cadmium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Cadmium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Cadmium.setText("Cd");
        Cadmium.setPreferredSize(new java.awt.Dimension(50, 50));
        Cadmium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CadmiumActionPerformed(evt);
            }
        });

        Mercury.setEditable(false);
        Mercury.setBackground(new java.awt.Color(0, 0, 0));
        Mercury.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Mercury.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Mercury.setText("Hg");
        Mercury.setPreferredSize(new java.awt.Dimension(50, 50));
        Mercury.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MercuryActionPerformed(evt);
            }
        });

        Copermicium.setEditable(false);
        Copermicium.setBackground(new java.awt.Color(0, 0, 0));
        Copermicium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Copermicium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Copermicium.setText("Cn");
        Copermicium.setPreferredSize(new java.awt.Dimension(50, 50));
        Copermicium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CopermiciumActionPerformed(evt);
            }
        });

        Galium.setEditable(false);
        Galium.setBackground(new java.awt.Color(0, 0, 0));
        Galium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Galium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Galium.setText("Ga");
        Galium.setPreferredSize(new java.awt.Dimension(50, 50));
        Galium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GaliumActionPerformed(evt);
            }
        });

        Germanium.setEditable(false);
        Germanium.setBackground(new java.awt.Color(0, 0, 0));
        Germanium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Germanium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Germanium.setText("Ge");
        Germanium.setPreferredSize(new java.awt.Dimension(50, 50));
        Germanium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GermaniumActionPerformed(evt);
            }
        });

        Indium.setEditable(false);
        Indium.setBackground(new java.awt.Color(0, 0, 0));
        Indium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Indium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Indium.setText("In");
        Indium.setPreferredSize(new java.awt.Dimension(50, 50));
        Indium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IndiumActionPerformed(evt);
            }
        });

        Tin.setEditable(false);
        Tin.setBackground(new java.awt.Color(0, 0, 0));
        Tin.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Tin.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Tin.setText("Sn");
        Tin.setPreferredSize(new java.awt.Dimension(50, 50));
        Tin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TinActionPerformed(evt);
            }
        });

        Thallium.setEditable(false);
        Thallium.setBackground(new java.awt.Color(0, 0, 0));
        Thallium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Thallium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Thallium.setText("Tl");
        Thallium.setPreferredSize(new java.awt.Dimension(50, 50));
        Thallium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ThalliumActionPerformed(evt);
            }
        });

        Lead.setEditable(false);
        Lead.setBackground(new java.awt.Color(0, 0, 0));
        Lead.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Lead.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Lead.setText("Pb");
        Lead.setPreferredSize(new java.awt.Dimension(50, 50));
        Lead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LeadActionPerformed(evt);
            }
        });

        Nihonium.setEditable(false);
        Nihonium.setBackground(new java.awt.Color(0, 0, 0));
        Nihonium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Nihonium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Nihonium.setText("Nh");
        Nihonium.setPreferredSize(new java.awt.Dimension(50, 50));
        Nihonium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NihoniumActionPerformed(evt);
            }
        });

        Flerovium.setEditable(false);
        Flerovium.setBackground(new java.awt.Color(0, 0, 0));
        Flerovium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Flerovium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Flerovium.setText("Fv");
        Flerovium.setPreferredSize(new java.awt.Dimension(50, 50));
        Flerovium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FleroviumActionPerformed(evt);
            }
        });

        Moscovium.setEditable(false);
        Moscovium.setBackground(new java.awt.Color(0, 0, 0));
        Moscovium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Moscovium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Moscovium.setText("Mc");
        Moscovium.setPreferredSize(new java.awt.Dimension(50, 50));
        Moscovium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoscoviumActionPerformed(evt);
            }
        });

        Livermorium.setEditable(false);
        Livermorium.setBackground(new java.awt.Color(0, 0, 0));
        Livermorium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Livermorium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Livermorium.setText("Lv");
        Livermorium.setPreferredSize(new java.awt.Dimension(50, 50));
        Livermorium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LivermoriumActionPerformed(evt);
            }
        });

        Bismuth.setEditable(false);
        Bismuth.setBackground(new java.awt.Color(0, 0, 0));
        Bismuth.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Bismuth.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Bismuth.setText("Bi");
        Bismuth.setPreferredSize(new java.awt.Dimension(50, 50));
        Bismuth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BismuthActionPerformed(evt);
            }
        });

        Polonium.setEditable(false);
        Polonium.setBackground(new java.awt.Color(0, 0, 0));
        Polonium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Polonium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Polonium.setText("Po");
        Polonium.setPreferredSize(new java.awt.Dimension(50, 50));
        Polonium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PoloniumActionPerformed(evt);
            }
        });

        Antimony.setEditable(false);
        Antimony.setBackground(new java.awt.Color(0, 0, 0));
        Antimony.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Antimony.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Antimony.setText("Sb");
        Antimony.setPreferredSize(new java.awt.Dimension(50, 50));
        Antimony.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AntimonyActionPerformed(evt);
            }
        });

        Tellurium.setEditable(false);
        Tellurium.setBackground(new java.awt.Color(0, 0, 0));
        Tellurium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Tellurium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Tellurium.setText("Te");
        Tellurium.setPreferredSize(new java.awt.Dimension(50, 50));
        Tellurium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TelluriumActionPerformed(evt);
            }
        });

        Iodine.setEditable(false);
        Iodine.setBackground(new java.awt.Color(0, 0, 0));
        Iodine.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Iodine.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Iodine.setText("I");
        Iodine.setPreferredSize(new java.awt.Dimension(50, 50));
        Iodine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IodineActionPerformed(evt);
            }
        });

        Astatine.setEditable(false);
        Astatine.setBackground(new java.awt.Color(0, 0, 0));
        Astatine.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Astatine.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Astatine.setText("At");
        Astatine.setPreferredSize(new java.awt.Dimension(50, 50));
        Astatine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AstatineActionPerformed(evt);
            }
        });

        Tennessine.setEditable(false);
        Tennessine.setBackground(new java.awt.Color(0, 0, 0));
        Tennessine.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Tennessine.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Tennessine.setText("Ts");
        Tennessine.setPreferredSize(new java.awt.Dimension(50, 50));
        Tennessine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TennessineActionPerformed(evt);
            }
        });

        Xenon.setEditable(false);
        Xenon.setBackground(new java.awt.Color(0, 0, 0));
        Xenon.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Xenon.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Xenon.setText("Xe");
        Xenon.setPreferredSize(new java.awt.Dimension(50, 50));
        Xenon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XenonActionPerformed(evt);
            }
        });

        Radon.setEditable(false);
        Radon.setBackground(new java.awt.Color(0, 0, 0));
        Radon.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Radon.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Radon.setText("Rn");
        Radon.setPreferredSize(new java.awt.Dimension(50, 50));
        Radon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RadonActionPerformed(evt);
            }
        });

        Oganesson.setEditable(false);
        Oganesson.setBackground(new java.awt.Color(0, 0, 0));
        Oganesson.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Oganesson.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Oganesson.setText("Og");
        Oganesson.setPreferredSize(new java.awt.Dimension(50, 50));
        Oganesson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OganessonActionPerformed(evt);
            }
        });

        Fluorine.setEditable(false);
        Fluorine.setBackground(new java.awt.Color(0, 0, 0));
        Fluorine.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Fluorine.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Fluorine.setText("F");
        Fluorine.setPreferredSize(new java.awt.Dimension(50, 50));
        Fluorine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FluorineActionPerformed(evt);
            }
        });

        Neon.setEditable(false);
        Neon.setBackground(new java.awt.Color(0, 0, 0));
        Neon.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Neon.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Neon.setText("Ne");
        Neon.setPreferredSize(new java.awt.Dimension(50, 50));
        Neon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NeonActionPerformed(evt);
            }
        });

        Helium.setEditable(false);
        Helium.setBackground(new java.awt.Color(0, 0, 0));
        Helium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Helium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Helium.setText("He");
        Helium.setPreferredSize(new java.awt.Dimension(50, 50));
        Helium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HeliumActionPerformed(evt);
            }
        });

        Oxygen.setEditable(false);
        Oxygen.setBackground(new java.awt.Color(0, 0, 0));
        Oxygen.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Oxygen.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Oxygen.setText("O");
        Oxygen.setPreferredSize(new java.awt.Dimension(50, 50));
        Oxygen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OxygenActionPerformed(evt);
            }
        });

        Nitrogen.setEditable(false);
        Nitrogen.setBackground(new java.awt.Color(0, 0, 0));
        Nitrogen.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Nitrogen.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Nitrogen.setText("N");
        Nitrogen.setPreferredSize(new java.awt.Dimension(50, 50));
        Nitrogen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NitrogenActionPerformed(evt);
            }
        });

        Silicon.setEditable(false);
        Silicon.setBackground(new java.awt.Color(0, 0, 0));
        Silicon.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Silicon.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Silicon.setText("Si");
        Silicon.setPreferredSize(new java.awt.Dimension(50, 50));
        Silicon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SiliconActionPerformed(evt);
            }
        });

        Carbon.setEditable(false);
        Carbon.setBackground(new java.awt.Color(0, 0, 0));
        Carbon.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Carbon.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Carbon.setText("C");
        Carbon.setPreferredSize(new java.awt.Dimension(50, 50));
        Carbon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CarbonActionPerformed(evt);
            }
        });

        Aluminium.setEditable(false);
        Aluminium.setBackground(new java.awt.Color(0, 0, 0));
        Aluminium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Aluminium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Aluminium.setText("Al");
        Aluminium.setPreferredSize(new java.awt.Dimension(50, 50));
        Aluminium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AluminiumActionPerformed(evt);
            }
        });

        Boron.setEditable(false);
        Boron.setBackground(new java.awt.Color(0, 0, 0));
        Boron.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Boron.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Boron.setText("B");
        Boron.setPreferredSize(new java.awt.Dimension(50, 50));
        Boron.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoronActionPerformed(evt);
            }
        });

        Lanthanum.setEditable(false);
        Lanthanum.setBackground(new java.awt.Color(0, 0, 0));
        Lanthanum.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Lanthanum.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Lanthanum.setText("La");
        Lanthanum.setPreferredSize(new java.awt.Dimension(50, 50));
        Lanthanum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LanthanumActionPerformed(evt);
            }
        });

        Cerium.setEditable(false);
        Cerium.setBackground(new java.awt.Color(0, 0, 0));
        Cerium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Cerium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Cerium.setText("Ce");
        Cerium.setPreferredSize(new java.awt.Dimension(50, 50));
        Cerium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CeriumActionPerformed(evt);
            }
        });

        Praseodymium.setEditable(false);
        Praseodymium.setBackground(new java.awt.Color(0, 0, 0));
        Praseodymium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Praseodymium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Praseodymium.setText("Pr");
        Praseodymium.setPreferredSize(new java.awt.Dimension(50, 50));
        Praseodymium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PraseodymiumActionPerformed(evt);
            }
        });

        Neodymium.setEditable(false);
        Neodymium.setBackground(new java.awt.Color(0, 0, 0));
        Neodymium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Neodymium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Neodymium.setText("Nd");
        Neodymium.setPreferredSize(new java.awt.Dimension(50, 50));
        Neodymium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NeodymiumActionPerformed(evt);
            }
        });

        Promethium.setEditable(false);
        Promethium.setBackground(new java.awt.Color(0, 0, 0));
        Promethium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Promethium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Promethium.setText("Pm");
        Promethium.setPreferredSize(new java.awt.Dimension(50, 50));
        Promethium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PromethiumActionPerformed(evt);
            }
        });

        Samarium.setEditable(false);
        Samarium.setBackground(new java.awt.Color(0, 0, 0));
        Samarium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Samarium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Samarium.setText("Sm");
        Samarium.setPreferredSize(new java.awt.Dimension(50, 50));
        Samarium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SamariumActionPerformed(evt);
            }
        });

        Europium.setEditable(false);
        Europium.setBackground(new java.awt.Color(0, 0, 0));
        Europium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Europium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Europium.setText("Eu");
        Europium.setPreferredSize(new java.awt.Dimension(50, 50));
        Europium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EuropiumActionPerformed(evt);
            }
        });

        Gadolinium.setEditable(false);
        Gadolinium.setBackground(new java.awt.Color(0, 0, 0));
        Gadolinium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Gadolinium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Gadolinium.setText("Gd");
        Gadolinium.setPreferredSize(new java.awt.Dimension(50, 50));
        Gadolinium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GadoliniumActionPerformed(evt);
            }
        });

        Terbium.setEditable(false);
        Terbium.setBackground(new java.awt.Color(0, 0, 0));
        Terbium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Terbium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Terbium.setText("Tb");
        Terbium.setPreferredSize(new java.awt.Dimension(50, 50));
        Terbium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TerbiumActionPerformed(evt);
            }
        });

        Dysprosium.setEditable(false);
        Dysprosium.setBackground(new java.awt.Color(0, 0, 0));
        Dysprosium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Dysprosium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Dysprosium.setText("Dy");
        Dysprosium.setPreferredSize(new java.awt.Dimension(50, 50));
        Dysprosium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DysprosiumActionPerformed(evt);
            }
        });

        Holmium.setEditable(false);
        Holmium.setBackground(new java.awt.Color(0, 0, 0));
        Holmium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Holmium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Holmium.setText("Ho");
        Holmium.setPreferredSize(new java.awt.Dimension(50, 50));
        Holmium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HolmiumActionPerformed(evt);
            }
        });

        Erbium.setEditable(false);
        Erbium.setBackground(new java.awt.Color(0, 0, 0));
        Erbium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Erbium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Erbium.setText("Er");
        Erbium.setPreferredSize(new java.awt.Dimension(50, 50));
        Erbium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ErbiumActionPerformed(evt);
            }
        });

        Thullium.setEditable(false);
        Thullium.setBackground(new java.awt.Color(0, 0, 0));
        Thullium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Thullium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Thullium.setText("Tm");
        Thullium.setPreferredSize(new java.awt.Dimension(50, 50));
        Thullium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ThulliumActionPerformed(evt);
            }
        });

        Ytterbium.setEditable(false);
        Ytterbium.setBackground(new java.awt.Color(0, 0, 0));
        Ytterbium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Ytterbium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Ytterbium.setText("Yb");
        Ytterbium.setPreferredSize(new java.awt.Dimension(50, 50));
        Ytterbium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                YtterbiumActionPerformed(evt);
            }
        });

        Lutetium.setEditable(false);
        Lutetium.setBackground(new java.awt.Color(0, 0, 0));
        Lutetium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Lutetium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Lutetium.setText("Lu");
        Lutetium.setPreferredSize(new java.awt.Dimension(50, 50));
        Lutetium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LutetiumActionPerformed(evt);
            }
        });

        Actinium.setEditable(false);
        Actinium.setBackground(new java.awt.Color(0, 0, 0));
        Actinium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Actinium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Actinium.setText("Ac");
        Actinium.setPreferredSize(new java.awt.Dimension(50, 50));
        Actinium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ActiniumActionPerformed(evt);
            }
        });

        Thorium.setEditable(false);
        Thorium.setBackground(new java.awt.Color(0, 0, 0));
        Thorium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Thorium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Thorium.setText("Th");
        Thorium.setPreferredSize(new java.awt.Dimension(50, 50));
        Thorium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ThoriumActionPerformed(evt);
            }
        });

        Protactinium.setEditable(false);
        Protactinium.setBackground(new java.awt.Color(0, 0, 0));
        Protactinium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Protactinium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Protactinium.setText("Pa");
        Protactinium.setPreferredSize(new java.awt.Dimension(50, 50));
        Protactinium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProtactiniumActionPerformed(evt);
            }
        });

        Uranium.setEditable(false);
        Uranium.setBackground(new java.awt.Color(0, 0, 0));
        Uranium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Uranium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Uranium.setText("U");
        Uranium.setPreferredSize(new java.awt.Dimension(50, 50));
        Uranium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UraniumActionPerformed(evt);
            }
        });

        Neptunium.setEditable(false);
        Neptunium.setBackground(new java.awt.Color(0, 0, 0));
        Neptunium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Neptunium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Neptunium.setText("Np");
        Neptunium.setPreferredSize(new java.awt.Dimension(50, 50));
        Neptunium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NeptuniumActionPerformed(evt);
            }
        });

        Plutonium.setEditable(false);
        Plutonium.setBackground(new java.awt.Color(0, 0, 0));
        Plutonium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Plutonium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Plutonium.setText("Pu");
        Plutonium.setPreferredSize(new java.awt.Dimension(50, 50));
        Plutonium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlutoniumActionPerformed(evt);
            }
        });

        Americium.setEditable(false);
        Americium.setBackground(new java.awt.Color(0, 0, 0));
        Americium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Americium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Americium.setText("Am");
        Americium.setPreferredSize(new java.awt.Dimension(50, 50));
        Americium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AmericiumActionPerformed(evt);
            }
        });

        Curium.setEditable(false);
        Curium.setBackground(new java.awt.Color(0, 0, 0));
        Curium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Curium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Curium.setText("Cm");
        Curium.setPreferredSize(new java.awt.Dimension(50, 50));
        Curium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CuriumActionPerformed(evt);
            }
        });

        Berkelium.setEditable(false);
        Berkelium.setBackground(new java.awt.Color(0, 0, 0));
        Berkelium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Berkelium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Berkelium.setText("Bk");
        Berkelium.setPreferredSize(new java.awt.Dimension(50, 50));
        Berkelium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BerkeliumActionPerformed(evt);
            }
        });

        Californium.setEditable(false);
        Californium.setBackground(new java.awt.Color(0, 0, 0));
        Californium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Californium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Californium.setText("Cf");
        Californium.setPreferredSize(new java.awt.Dimension(50, 50));
        Californium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CaliforniumActionPerformed(evt);
            }
        });

        Einsteinium.setEditable(false);
        Einsteinium.setBackground(new java.awt.Color(0, 0, 0));
        Einsteinium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Einsteinium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Einsteinium.setText("Es");
        Einsteinium.setPreferredSize(new java.awt.Dimension(50, 50));
        Einsteinium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EinsteiniumActionPerformed(evt);
            }
        });

        Fermium.setEditable(false);
        Fermium.setBackground(new java.awt.Color(0, 0, 0));
        Fermium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Fermium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Fermium.setText("Fm");
        Fermium.setPreferredSize(new java.awt.Dimension(50, 50));
        Fermium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FermiumActionPerformed(evt);
            }
        });

        Mendelevium.setEditable(false);
        Mendelevium.setBackground(new java.awt.Color(0, 0, 0));
        Mendelevium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Mendelevium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Mendelevium.setText("Md");
        Mendelevium.setPreferredSize(new java.awt.Dimension(50, 50));
        Mendelevium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MendeleviumActionPerformed(evt);
            }
        });

        Nobelium.setEditable(false);
        Nobelium.setBackground(new java.awt.Color(0, 0, 0));
        Nobelium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Nobelium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Nobelium.setText("No");
        Nobelium.setPreferredSize(new java.awt.Dimension(50, 50));
        Nobelium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NobeliumActionPerformed(evt);
            }
        });

        Lawrencium.setEditable(false);
        Lawrencium.setBackground(new java.awt.Color(0, 0, 0));
        Lawrencium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Lawrencium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Lawrencium.setText("Lr");
        Lawrencium.setPreferredSize(new java.awt.Dimension(50, 50));
        Lawrencium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LawrenciumActionPerformed(evt);
            }
        });

        Arsenic.setEditable(false);
        Arsenic.setBackground(new java.awt.Color(0, 0, 0));
        Arsenic.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Arsenic.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Arsenic.setText("As");
        Arsenic.setPreferredSize(new java.awt.Dimension(50, 50));
        Arsenic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ArsenicActionPerformed(evt);
            }
        });

        Selenium.setEditable(false);
        Selenium.setBackground(new java.awt.Color(0, 0, 0));
        Selenium.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Selenium.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Selenium.setText("Se");
        Selenium.setPreferredSize(new java.awt.Dimension(50, 50));
        Selenium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SeleniumActionPerformed(evt);
            }
        });

        Bromine.setEditable(false);
        Bromine.setBackground(new java.awt.Color(0, 0, 0));
        Bromine.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Bromine.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Bromine.setText("Br");
        Bromine.setPreferredSize(new java.awt.Dimension(50, 50));
        Bromine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BromineActionPerformed(evt);
            }
        });

        Krypton.setEditable(false);
        Krypton.setBackground(new java.awt.Color(0, 0, 0));
        Krypton.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Krypton.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Krypton.setText("Kr");
        Krypton.setPreferredSize(new java.awt.Dimension(50, 50));
        Krypton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KryptonActionPerformed(evt);
            }
        });

        Phosphorus.setEditable(false);
        Phosphorus.setBackground(new java.awt.Color(0, 0, 0));
        Phosphorus.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Phosphorus.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Phosphorus.setText("P");
        Phosphorus.setPreferredSize(new java.awt.Dimension(50, 50));
        Phosphorus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PhosphorusActionPerformed(evt);
            }
        });

        Chlorine.setEditable(false);
        Chlorine.setBackground(new java.awt.Color(0, 0, 0));
        Chlorine.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Chlorine.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Chlorine.setText("Cl");
        Chlorine.setPreferredSize(new java.awt.Dimension(50, 50));
        Chlorine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChlorineActionPerformed(evt);
            }
        });

        Sulfur.setEditable(false);
        Sulfur.setBackground(new java.awt.Color(0, 0, 0));
        Sulfur.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Sulfur.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Sulfur.setText("S");
        Sulfur.setPreferredSize(new java.awt.Dimension(50, 50));
        Sulfur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SulfurActionPerformed(evt);
            }
        });

        Argon.setEditable(false);
        Argon.setBackground(new java.awt.Color(0, 0, 0));
        Argon.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        Argon.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Argon.setText("Ar");
        Argon.setPreferredSize(new java.awt.Dimension(50, 50));
        Argon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ArgonActionPerformed(evt);
            }
        });

        elementNameHere.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        elementNameHere.setToolTipText("You don't have much time! Write the elements in!");
        elementNameHere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elementNameHereActionPerformed(evt);
            }
        });

        timer.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        timer.setText("420");
        timer.setToolTipText("");

        jLabel2.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 14)); // NOI18N
        jLabel2.setText("Hint! :");
        jLabel2.setToolTipText("Perhaps you need a little push to get yourself going. Here's a hint!");

        jLabel3.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 14)); // NOI18N
        jLabel3.setText(" ");
        jLabel3.setToolTipText("");

        jLabel4.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 36)); // NOI18N
        jLabel4.setText("The Periodic Table Memory Challenge!");

        jLabel5.setFont(new java.awt.Font("Berlin Sans FB", 1, 14)); // NOI18N
        jLabel5.setText("Time Remaining:");
        jLabel5.setToolTipText("Hurry up! Time is ticking!!!");

        startChallenge.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        startChallenge.setText("Start Challenge");
        startChallenge.setToolTipText("Are you ready for the ultimate challenge?");
        startChallenge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startChallengeActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Berlin Sans FB", 1, 14)); // NOI18N
        jLabel6.setText("Enter an element name:");
        jLabel6.setToolTipText("");

        jlabelidk.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 18)); // NOI18N
        jlabelidk.setText("Score:");

        score.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 18)); // NOI18N
        score.setText("0");

        aHint.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        aHint.setText(" ");

        aTip.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        aTip.setText("                                                                          ");

        abortChallenge.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        abortChallenge.setText("Abort Challenge!");
        abortChallenge.setToolTipText("Do you give up? Skip the remaining time here!");
        abortChallenge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abortChallengeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(185, 185, 185)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(Rubidium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Strontium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Yttrium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Ziconium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Niobium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Molybdenum, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Technetium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Ruthenium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Rhodium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Palladium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Silver, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Cadmium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Indium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Tin, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Antimony, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Tellurium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Iodine, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Xenon, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(Cesium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Barium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Hafnium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Tantalum, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Tungsten, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Rhenium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Osmium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Iridium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Platnium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Gold, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Mercury, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Thallium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Lead, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Bismuth, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Polonium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Astatine, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Radon, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(Francium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Radium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Rutherfordium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Dubnium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Seaborgium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Borhium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Hassium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Meitnerium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Darmstadtium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Roentgenium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Copermicium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Nihonium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Flerovium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Moscovium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Livermorium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Tennessine, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Oganesson, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(Lanthanum, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Cerium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Praseodymium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Neodymium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Promethium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Samarium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Europium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Gadolinium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Terbium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Dysprosium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Holmium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Erbium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Thullium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Ytterbium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Lutetium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(Actinium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Thorium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Protactinium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Uranium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Neptunium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Plutonium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Americium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Curium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Berkelium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Californium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Einsteinium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Fermium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Mendelevium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Nobelium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Lawrencium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(494, 494, 494)
                        .addComponent(jlabelidk)
                        .addGap(6, 6, 6)
                        .addComponent(score))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Potassium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(Calcium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(Scandium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(Titanium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(Vanadium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(Chromium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(Manganese, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(Iron, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(Cobalt, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(Nickel, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(Copper, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(Zinc, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Aluminium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Galium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Boron, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(Germanium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Arsenic, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Selenium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Bromine, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Krypton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(Silicon, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Phosphorus, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Sulfur, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Chlorine, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Argon, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(Carbon, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Nitrogen, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Oxygen, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Fluorine, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Neon, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(Lithium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(Beryllium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(Hydrogen, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(Sodium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(Magnesium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(69, 69, 69)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel6)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(elementNameHere, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(aTip, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(68, 68, 68)
                                                .addComponent(jLabel3))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(aHint, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(211, 211, 211)
                                        .addComponent(jLabel5)
                                        .addGap(10, 10, 10)
                                        .addComponent(timer)
                                        .addGap(25, 25, 25)
                                        .addComponent(startChallenge)
                                        .addGap(18, 18, 18)
                                        .addComponent(abortChallenge)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(Helium, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addGap(35, 35, 35))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(jLabel3)
                        .addGap(31, 31, 31))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Hydrogen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(startChallenge)
                                                .addComponent(abortChallenge))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(4, 4, 4)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel5)
                                                    .addComponent(timer))))
                                        .addGap(18, 18, 18)
                                        .addComponent(aTip)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Lithium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Beryllium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6)
                                    .addComponent(elementNameHere, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(Helium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Boron, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Carbon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Nitrogen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Oxygen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Fluorine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Neon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Sodium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Magnesium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2)
                                .addComponent(aHint)
                                .addComponent(Aluminium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Silicon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Phosphorus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Sulfur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Chlorine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Argon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(6, 6, 6)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Potassium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Calcium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Scandium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Titanium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Vanadium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Chromium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Manganese, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Iron, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Cobalt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Nickel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Copper, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Zinc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Galium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Germanium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Arsenic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Selenium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Bromine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Krypton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Rubidium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Strontium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Yttrium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Ziconium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Niobium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Molybdenum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Technetium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Ruthenium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Rhodium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Palladium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Silver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Cadmium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Indium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Tin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Antimony, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Tellurium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Iodine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Xenon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Cesium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Barium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Hafnium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Tantalum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Tungsten, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Rhenium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Osmium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Iridium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Platnium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Gold, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Mercury, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Thallium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Lead, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Bismuth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Polonium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Astatine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Radon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Francium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Radium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Rutherfordium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Dubnium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Seaborgium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Borhium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Hassium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Meitnerium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Darmstadtium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Roentgenium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Copermicium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Nihonium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Flerovium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Moscovium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Livermorium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Tennessine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Oganesson, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Lanthanum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Cerium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Praseodymium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Neodymium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Promethium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Samarium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Europium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Gadolinium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Terbium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Dysprosium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Holmium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Erbium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Thullium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Ytterbium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Lutetium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Actinium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Thorium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Protactinium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Uranium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Neptunium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Plutonium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Americium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Curium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Berkelium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Californium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Einsteinium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Fermium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Mendelevium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Nobelium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Lawrencium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlabelidk)
                    .addComponent(score)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void HydrogenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HydrogenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HydrogenActionPerformed

    private void LithiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LithiumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LithiumActionPerformed

    private void SodiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SodiumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SodiumActionPerformed

    private void PotassiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PotassiumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PotassiumActionPerformed

    private void RubidiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RubidiumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RubidiumActionPerformed

    private void CesiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CesiumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CesiumActionPerformed

    private void FranciumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FranciumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FranciumActionPerformed

    private void RadiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RadiumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RadiumActionPerformed

    private void BariumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BariumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BariumActionPerformed

    private void StrontiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StrontiumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StrontiumActionPerformed

    private void CalciumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CalciumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CalciumActionPerformed

    private void MagnesiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MagnesiumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MagnesiumActionPerformed

    private void BerylliumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BerylliumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BerylliumActionPerformed

    private void ScandiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ScandiumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ScandiumActionPerformed

    private void YttriumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_YttriumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_YttriumActionPerformed

    private void VanadiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VanadiumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_VanadiumActionPerformed

    private void NiobiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NiobiumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NiobiumActionPerformed

    private void TantalumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TantalumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TantalumActionPerformed

    private void DubniumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DubniumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DubniumActionPerformed

    private void ChromiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChromiumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ChromiumActionPerformed

    private void ManganeseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ManganeseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ManganeseActionPerformed

    private void CobaltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CobaltActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CobaltActionPerformed

    private void MolybdenumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MolybdenumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MolybdenumActionPerformed

    private void TechnetiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TechnetiumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TechnetiumActionPerformed

    private void RhodiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RhodiumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RhodiumActionPerformed

    private void TungstenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TungstenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TungstenActionPerformed

    private void RheniumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RheniumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RheniumActionPerformed

    private void IridiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IridiumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IridiumActionPerformed

    private void SeaborgiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SeaborgiumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SeaborgiumActionPerformed

    private void BorhiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BorhiumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BorhiumActionPerformed

    private void MeitneriumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MeitneriumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MeitneriumActionPerformed

    private void DarmstadtiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DarmstadtiumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DarmstadtiumActionPerformed

    private void PlatniumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlatniumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PlatniumActionPerformed

    private void PalladiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PalladiumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PalladiumActionPerformed

    private void NickelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NickelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NickelActionPerformed

    private void TitaniumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TitaniumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TitaniumActionPerformed

    private void IronActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IronActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IronActionPerformed

    private void ZiconiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ZiconiumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ZiconiumActionPerformed

    private void HafniumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HafniumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HafniumActionPerformed

    private void RutherfordiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RutherfordiumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RutherfordiumActionPerformed

    private void RutheniumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RutheniumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RutheniumActionPerformed

    private void OsmiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OsmiumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OsmiumActionPerformed

    private void HassiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HassiumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HassiumActionPerformed

    private void CopperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CopperActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CopperActionPerformed

    private void SilverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SilverActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SilverActionPerformed

    private void GoldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GoldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GoldActionPerformed

    private void RoentgeniumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RoentgeniumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RoentgeniumActionPerformed

    private void ZincActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ZincActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ZincActionPerformed

    private void CadmiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CadmiumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CadmiumActionPerformed

    private void MercuryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MercuryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MercuryActionPerformed

    private void CopermiciumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CopermiciumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CopermiciumActionPerformed

    private void GaliumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GaliumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GaliumActionPerformed

    private void GermaniumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GermaniumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GermaniumActionPerformed

    private void IndiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IndiumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IndiumActionPerformed

    private void TinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TinActionPerformed

    private void ThalliumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ThalliumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ThalliumActionPerformed

    private void LeadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LeadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LeadActionPerformed

    private void NihoniumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NihoniumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NihoniumActionPerformed

    private void FleroviumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FleroviumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FleroviumActionPerformed

    private void MoscoviumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoscoviumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MoscoviumActionPerformed

    private void LivermoriumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LivermoriumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LivermoriumActionPerformed

    private void BismuthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BismuthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BismuthActionPerformed

    private void AntimonyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AntimonyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AntimonyActionPerformed

    private void TelluriumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TelluriumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TelluriumActionPerformed

    private void AstatineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AstatineActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AstatineActionPerformed

    private void TennessineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TennessineActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TennessineActionPerformed

    private void XenonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XenonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_XenonActionPerformed

    private void RadonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RadonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RadonActionPerformed

    private void OganessonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OganessonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OganessonActionPerformed

    private void FluorineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FluorineActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FluorineActionPerformed

    private void NeonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NeonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NeonActionPerformed

    private void HeliumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HeliumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HeliumActionPerformed

    private void OxygenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OxygenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OxygenActionPerformed

    private void NitrogenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NitrogenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NitrogenActionPerformed

    private void CarbonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CarbonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CarbonActionPerformed

    private void AluminiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AluminiumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AluminiumActionPerformed

    private void BoronActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoronActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BoronActionPerformed

    private void LanthanumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LanthanumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LanthanumActionPerformed

    private void CeriumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CeriumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CeriumActionPerformed

    private void PraseodymiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PraseodymiumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PraseodymiumActionPerformed

    private void NeodymiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NeodymiumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NeodymiumActionPerformed

    private void PromethiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PromethiumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PromethiumActionPerformed

    private void SamariumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SamariumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SamariumActionPerformed

    private void EuropiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EuropiumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EuropiumActionPerformed

    private void GadoliniumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GadoliniumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GadoliniumActionPerformed

    private void TerbiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TerbiumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TerbiumActionPerformed

    private void DysprosiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DysprosiumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DysprosiumActionPerformed

    private void HolmiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HolmiumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HolmiumActionPerformed

    private void ErbiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ErbiumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ErbiumActionPerformed

    private void ThulliumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ThulliumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ThulliumActionPerformed

    private void YtterbiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_YtterbiumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_YtterbiumActionPerformed

    private void LutetiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LutetiumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LutetiumActionPerformed

    private void ActiniumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ActiniumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ActiniumActionPerformed

    private void ThoriumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ThoriumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ThoriumActionPerformed

    private void ProtactiniumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProtactiniumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ProtactiniumActionPerformed

    private void UraniumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UraniumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UraniumActionPerformed

    private void NeptuniumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NeptuniumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NeptuniumActionPerformed

    private void PlutoniumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlutoniumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PlutoniumActionPerformed

    private void AmericiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AmericiumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AmericiumActionPerformed

    private void CuriumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CuriumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CuriumActionPerformed

    private void BerkeliumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BerkeliumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BerkeliumActionPerformed

    private void CaliforniumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CaliforniumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CaliforniumActionPerformed

    private void EinsteiniumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EinsteiniumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EinsteiniumActionPerformed

    private void FermiumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FermiumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FermiumActionPerformed

    private void MendeleviumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MendeleviumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MendeleviumActionPerformed

    private void NobeliumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NobeliumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NobeliumActionPerformed

    private void LawrenciumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LawrenciumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LawrenciumActionPerformed

    private void ArsenicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ArsenicActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ArsenicActionPerformed

    private void SeleniumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SeleniumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SeleniumActionPerformed

    private void BromineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BromineActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BromineActionPerformed

    private void KryptonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KryptonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_KryptonActionPerformed

    private void SiliconActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SiliconActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SiliconActionPerformed

    private void PhosphorusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PhosphorusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PhosphorusActionPerformed

    private void ChlorineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChlorineActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ChlorineActionPerformed

    private void SulfurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SulfurActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SulfurActionPerformed

    private void ArgonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ArgonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ArgonActionPerformed

    private void PoloniumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PoloniumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PoloniumActionPerformed

    private void IodineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IodineActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IodineActionPerformed

    private void startChallengeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startChallengeActionPerformed
        //Start the game timer when the "Start Challenge" button is pressed. --> This effectively starts the game!
        gameTimer.start();

    }//GEN-LAST:event_startChallengeActionPerformed

    //This method deals with the logic of the game and how it will be running. 
    private void elementNameHereActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elementNameHereActionPerformed

        //If the game timer is running,
        if (gameTimer.isRunning()) {
            //Start of element guessing logic.
            //take the text entered into the textbox and make it all lowercase!
            String elementNameHereTextField = elementNameHere.getText();
            elementNameHereTextField = elementNameHereTextField.toLowerCase();

            //If the element name is correct,
            if (elementNameHereTextField.matches("hydrogen")) {
                //as long as the text colour isn't white (this prevents the word from being entered multiple times and a point exploit to be used):
                if (!(Hydrogen.getForeground() == Color.WHITE)) {
                    //change the text colour to white and clear the textbox.
                    Hydrogen.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    //Additionally, change the player's score. In this case, add 100 points and continue playing.
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 100;
                    score.setText(Integer.toString(userScore));
                }
            }
            //The rest of the code for the other 117 elements remains the same.

            if (elementNameHereTextField.matches("helium")) {
                if (!(Helium.getForeground() == Color.WHITE)) {
                    Helium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 100;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("lithium")) {
                if (!(Lithium.getForeground() == Color.WHITE)) {
                    Lithium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 100;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("beryllium")) {
                if (!(Beryllium.getForeground() == Color.WHITE)) {
                    Beryllium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 100;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("boron")) {
                if (!(Boron.getForeground() == Color.WHITE)) {
                    Boron.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 100;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("carbon")) {
                if (!(Carbon.getForeground() == Color.WHITE)) {
                    Carbon.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 100;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("nitrogen")) {
                if (!(Nitrogen.getForeground() == Color.WHITE)) {
                    Nitrogen.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 100;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("oxygen")) {
                if (!(Oxygen.getForeground() == Color.WHITE)) {
                    Oxygen.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 100;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("fluorine")) {
                if (!(Fluorine.getForeground() == Color.WHITE)) {
                    Fluorine.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 100;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("neon")) {
                if (!(Neon.getForeground() == Color.WHITE)) {
                    Neon.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 100;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("neon")) {
                if (!(Neon.getForeground() == Color.WHITE)) {
                    Neon.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 100;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("sodium")) {
                if (!(Sodium.getForeground() == Color.WHITE)) {
                    Sodium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 250;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("magnesium")) {
                if (!(Magnesium.getForeground() == Color.WHITE)) {
                    Magnesium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 250;
                    score.setText(Integer.toString(userScore));
                }
            }

            //Doing a favour for those who spell aluminum/aluminium differently.
            if (elementNameHereTextField.matches("aluminum") || elementNameHereTextField.matches("aluminium")) {
                if (!(Aluminium.getForeground() == Color.WHITE)) {
                    Aluminium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 250;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("silicon")) {
                if (!(Silicon.getForeground() == Color.WHITE)) {
                    Silicon.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 250;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("phosphorus")) {
                if (!(Phosphorus.getForeground() == Color.WHITE)) {
                    Phosphorus.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 250;
                    score.setText(Integer.toString(userScore));
                }
            }

            //Being nice to those who spell sulfur/sulphur in different ways.
            if (elementNameHereTextField.matches("sulfur") || elementNameHereTextField.matches("sulphur")) {
                if (!(Sulfur.getForeground() == Color.WHITE)) {
                    Sulfur.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 250;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("chlorine")) {
                if (!(Chlorine.getForeground() == Color.WHITE)) {
                    Chlorine.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 250;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("argon")) {
                if (!(Argon.getForeground() == Color.WHITE)) {
                    Argon.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 250;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("potassium")) {
                if (!(Potassium.getForeground() == Color.WHITE)) {
                    Potassium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 250;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("calcium")) {
                if (!(Calcium.getForeground() == Color.WHITE)) {
                    Calcium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 250;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("scandium")) {
                if (!(Scandium.getForeground() == Color.WHITE)) {
                    Scandium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 250;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("titanium")) {
                if (!(Titanium.getForeground() == Color.WHITE)) {
                    Titanium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 250;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("vanadium")) {
                if (!(Vanadium.getForeground() == Color.WHITE)) {
                    Vanadium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 250;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("chromium")) {
                if (!(Chromium.getForeground() == Color.WHITE)) {
                    Chromium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 250;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("manganese")) {
                if (!(Manganese.getForeground() == Color.WHITE)) {
                    Manganese.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 250;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("iron")) {
                if (!(Iron.getForeground() == Color.WHITE)) {
                    Iron.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 250;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("cobalt")) {
                if (!(Cobalt.getForeground() == Color.WHITE)) {
                    Cobalt.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 250;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("nickel")) {
                if (!(Nickel.getForeground() == Color.WHITE)) {
                    Nickel.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 250;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("copper")) {
                if (!(Copper.getForeground() == Color.WHITE)) {
                    Copper.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 250;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("zinc")) {
                if (!(Zinc.getForeground() == Color.WHITE)) {
                    Zinc.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 250;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("gallium")) {
                if (!(Galium.getForeground() == Color.WHITE)) {
                    Galium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 250;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("germanium")) {
                if (!(Germanium.getForeground() == Color.WHITE)) {
                    Germanium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 250;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("arsenic")) {
                if (!(Arsenic.getForeground() == Color.WHITE)) {
                    Arsenic.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 250;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("selenium")) {
                if (!(Selenium.getForeground() == Color.WHITE)) {
                    Selenium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 250;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("bromine")) {
                if (!(Bromine.getForeground() == Color.WHITE)) {
                    Bromine.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 250;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("krypton")) {
                if (!(Krypton.getForeground() == Color.WHITE)) {
                    Krypton.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 250;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("rubidium")) {
                if (!(Rubidium.getForeground() == Color.WHITE)) {
                    Rubidium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("strontium")) {
                if (!(Strontium.getForeground() == Color.WHITE)) {
                    Strontium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("yttrium")) {
                if (!(Yttrium.getForeground() == Color.WHITE)) {
                    Yttrium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("zirconium")) {
                if (!(Ziconium.getForeground() == Color.WHITE)) {
                    Ziconium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("niobium")) {
                if (!(Niobium.getForeground() == Color.WHITE)) {
                    Niobium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("molybdenum")) {
                if (!(Molybdenum.getForeground() == Color.WHITE)) {
                    Molybdenum.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("technetium")) {
                if (!(Technetium.getForeground() == Color.WHITE)) {
                    Technetium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("ruthenium")) {
                if (!(Ruthenium.getForeground() == Color.WHITE)) {
                    Ruthenium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("rhodium")) {
                if (!(Rhodium.getForeground() == Color.WHITE)) {
                    Rhodium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("palladium")) {
                if (!(Palladium.getForeground() == Color.WHITE)) {
                    Palladium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("silver")) {
                if (!(Silver.getForeground() == Color.WHITE)) {
                    Silver.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("cadmium")) {
                if (!(Cadmium.getForeground() == Color.WHITE)) {
                    Cadmium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("indium")) {
                if (!(Indium.getForeground() == Color.WHITE)) {
                    Indium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("tin")) {
                if (!(Tin.getForeground() == Color.WHITE)) {
                    Tin.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("antimony")) {
                if (!(Antimony.getForeground() == Color.WHITE)) {
                    Antimony.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("tellurium")) {
                if (!(Tellurium.getForeground() == Color.WHITE)) {
                    Tellurium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("iodine")) {
                if (!(Iodine.getForeground() == Color.WHITE)) {
                    Iodine.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("xenon")) {
                if (!(Xenon.getForeground() == Color.WHITE)) {
                    Xenon.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("cesium")) {
                if (!(Cesium.getForeground() == Color.WHITE)) {
                    Cesium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 1000;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("barium")) {
                if (!(Barium.getForeground() == Color.WHITE)) {
                    Barium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 1000;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("hafnium")) {
                if (!(Hafnium.getForeground() == Color.WHITE)) {
                    Hafnium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 1000;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("tantalum")) {
                if (!(Tantalum.getForeground() == Color.WHITE)) {
                    Tantalum.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 1000;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("tungsten")) {
                if (!(Tungsten.getForeground() == Color.WHITE)) {
                    Tungsten.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 1000;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("rhenium")) {
                if (!(Rhenium.getForeground() == Color.WHITE)) {
                    Rhenium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 1000;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("osmium")) {
                if (!(Osmium.getForeground() == Color.WHITE)) {
                    Osmium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 1000;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("iridium")) {
                if (!(Iridium.getForeground() == Color.WHITE)) {
                    Iridium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 1000;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("platinum")) {
                if (!(Platnium.getForeground() == Color.WHITE)) {
                    Platnium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 1000;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("gold")) {
                if (!(Gold.getForeground() == Color.WHITE)) {
                    Gold.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 1000;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("mercury")) {
                if (!(Mercury.getForeground() == Color.WHITE)) {
                    Mercury.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 1000;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("thallium")) {
                if (!(Thallium.getForeground() == Color.WHITE)) {
                    Thallium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 1000;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("lead")) {
                if (!(Lead.getForeground() == Color.WHITE)) {
                    Lead.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 1000;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("bismuth")) {
                if (!(Bismuth.getForeground() == Color.WHITE)) {
                    Bismuth.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 1000;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("polonium")) {
                if (!(Polonium.getForeground() == Color.WHITE)) {
                    Polonium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 1000;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("astatine")) {
                if (!(Astatine.getForeground() == Color.WHITE)) {
                    Astatine.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 1000;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("radon")) {
                if (!(Radon.getForeground() == Color.WHITE)) {
                    Radon.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 1000;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("francium")) {
                if (!(Francium.getForeground() == Color.WHITE)) {
                    Francium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2000;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("radium")) {
                if (!(Radium.getForeground() == Color.WHITE)) {
                    Radium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2000;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("rutherfordium")) {
                if (!(Rutherfordium.getForeground() == Color.WHITE)) {
                    Rutherfordium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("dubnium")) {
                if (!(Dubnium.getForeground() == Color.WHITE)) {
                    Dubnium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("seaborgium")) {
                if (!(Seaborgium.getForeground() == Color.WHITE)) {
                    Seaborgium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("bohrium")) {
                if (!(Borhium.getForeground() == Color.WHITE)) {
                    Borhium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("hassium")) {
                if (!(Hassium.getForeground() == Color.WHITE)) {
                    Hassium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("meitnerium")) {
                if (!(Meitnerium.getForeground() == Color.WHITE)) {
                    Meitnerium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("darmstadtium")) {
                if (!(Darmstadtium.getForeground() == Color.WHITE)) {
                    Darmstadtium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("roentgenium")) {
                if (!(Roentgenium.getForeground() == Color.WHITE)) {
                    Roentgenium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("copernicium")) {
                if (!(Copermicium.getForeground() == Color.WHITE)) {
                    Copermicium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("nihonium")) {
                if (!(Nihonium.getForeground() == Color.WHITE)) {
                    Nihonium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("flerovium")) {
                if (!(Flerovium.getForeground() == Color.WHITE)) {
                    Flerovium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("moscovium")) {
                if (!(Moscovium.getForeground() == Color.WHITE)) {
                    Moscovium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("livermorium")) {
                if (!(Livermorium.getForeground() == Color.WHITE)) {
                    Livermorium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("tennessine")) {
                if (!(Tennessine.getForeground() == Color.WHITE)) {
                    Tennessine.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("oganesson")) {
                if (!(Oganesson.getForeground() == Color.WHITE)) {
                    Oganesson.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("lanthanum")) {
                if (!(Lanthanum.getForeground() == Color.WHITE)) {
                    Lanthanum.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("cerium")) {
                if (!(Cerium.getForeground() == Color.WHITE)) {
                    Cerium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("praseodymium")) {
                if (!(Praseodymium.getForeground() == Color.WHITE)) {
                    Praseodymium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("neodymium")) {
                if (!(Neodymium.getForeground() == Color.WHITE)) {
                    Neodymium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("promethium")) {
                if (!(Promethium.getForeground() == Color.WHITE)) {
                    Promethium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("samarium")) {
                if (!(Samarium.getForeground() == Color.WHITE)) {
                    Samarium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("europium")) {
                if (!(Europium.getForeground() == Color.WHITE)) {
                    Europium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("gadolinium")) {
                if (!(Gadolinium.getForeground() == Color.WHITE)) {
                    Gadolinium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("terbium")) {
                if (!(Terbium.getForeground() == Color.WHITE)) {
                    Terbium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("dysprosium")) {
                if (!(Dysprosium.getForeground() == Color.WHITE)) {
                    Dysprosium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("holmium")) {
                if (!(Holmium.getForeground() == Color.WHITE)) {
                    Holmium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("erbium")) {
                if (!(Erbium.getForeground() == Color.WHITE)) {
                    Erbium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("thulium")) {
                if (!(Thullium.getForeground() == Color.WHITE)) {
                    Thullium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("ytterbium")) {
                if (!(Ytterbium.getForeground() == Color.WHITE)) {
                    Ytterbium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("lutetium")) {
                if (!(Lutetium.getForeground() == Color.WHITE)) {
                    Lutetium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("actinium")) {
                if (!(Actinium.getForeground() == Color.WHITE)) {
                    Actinium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("thorium")) {
                if (!(Thorium.getForeground() == Color.WHITE)) {
                    Thorium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("protactinium")) {
                if (!(Protactinium.getForeground() == Color.WHITE)) {
                    Protactinium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("uranium")) {
                if (!(Uranium.getForeground() == Color.WHITE)) {
                    Uranium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("neptunium")) {
                if (!(Neptunium.getForeground() == Color.WHITE)) {
                    Neptunium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("plutonium")) {
                if (!(Plutonium.getForeground() == Color.WHITE)) {
                    Plutonium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("americium")) {
                if (!(Americium.getForeground() == Color.WHITE)) {
                    Americium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("curium")) {
                if (!(Curium.getForeground() == Color.WHITE)) {
                    Curium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("berkelium")) {
                if (!(Berkelium.getForeground() == Color.WHITE)) {
                    Berkelium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("californium")) {
                if (!(Californium.getForeground() == Color.WHITE)) {
                    Californium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("einsteinium")) {
                if (!(Einsteinium.getForeground() == Color.WHITE)) {
                    Einsteinium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("fermium")) {
                if (!(Fermium.getForeground() == Color.WHITE)) {
                    Fermium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("mendelevium")) {
                if (!(Mendelevium.getForeground() == Color.WHITE)) {
                    Mendelevium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("nobelium")) {
                if (!(Nobelium.getForeground() == Color.WHITE)) {
                    Nobelium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            if (elementNameHereTextField.matches("lawrencium")) {
                if (!(Lawrencium.getForeground() == Color.WHITE)) {
                    Lawrencium.setForeground(Color.WHITE);
                    elementNameHere.setText("");
                    String scoreText = score.getText();
                    int userScore = Integer.parseInt(scoreText);
                    userScore += 2500;
                    score.setText(Integer.toString(userScore));
                }
            }

            //End of element guessing logic.
            //THIS IS A SECRET CODE. IF YOU NOW THIS CODE, YOU CAN AUTOMATICALLY BYPASS THE GAME ENTIRELY AND SCORE AN INSANE AMOUNT OF POINTS!
            //If the text entered is my girlfriend's full name:
            if (elementNameHereTextField.matches("veronica maryanne eleches")) {
                //add 22112017 to the score.
                String scoreText = score.getText();
                int userScore = Integer.parseInt(scoreText);
                if (!(userScore >= 22112017)) {
                    userScore += 22112017;
                    score.setText(Integer.toString(userScore));
                    //Take a string of the timer, manipulate it to equal 1 second, all in order to end the timer immediately.
                    String timerText = timer.getText();
                    int time = Integer.parseInt(timerText);
                    time = 1;
                    timer.setText(Integer.toString(time));
                }
            }

            //If a perfect score is achieved,
            if (score.getText().matches("150000")) {
                //Immediately end the timer and subsequently the game.
                String timerText = timer.getText();
                int time = Integer.parseInt(timerText);
                time = 1;
                timer.setText(Integer.toString(time));
            }
        }
    }//GEN-LAST:event_elementNameHereActionPerformed

    private void abortChallengeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abortChallengeActionPerformed
        //If the game timer is running and the user wants to terminate the session:
        if (gameTimer.isRunning()) {
            //Immediately end the timer.
            String timerText = timer.getText();
            int time = Integer.parseInt(timerText);
            time = 1;
            timer.setText(Integer.toString(time));
        }
    }//GEN-LAST:event_abortChallengeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PeriodicTableMemoryGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PeriodicTableMemoryGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PeriodicTableMemoryGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PeriodicTableMemoryGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PeriodicTableMemoryGame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Actinium;
    private javax.swing.JTextField Aluminium;
    private javax.swing.JTextField Americium;
    private javax.swing.JTextField Antimony;
    private javax.swing.JTextField Argon;
    private javax.swing.JTextField Arsenic;
    private javax.swing.JTextField Astatine;
    private javax.swing.JTextField Barium;
    private javax.swing.JTextField Berkelium;
    private javax.swing.JTextField Beryllium;
    private javax.swing.JTextField Bismuth;
    private javax.swing.JTextField Borhium;
    private javax.swing.JTextField Boron;
    private javax.swing.JTextField Bromine;
    private javax.swing.JTextField Cadmium;
    private javax.swing.JTextField Calcium;
    private javax.swing.JTextField Californium;
    private javax.swing.JTextField Carbon;
    private javax.swing.JTextField Cerium;
    private javax.swing.JTextField Cesium;
    private javax.swing.JTextField Chlorine;
    private javax.swing.JTextField Chromium;
    private javax.swing.JTextField Cobalt;
    private javax.swing.JTextField Copermicium;
    private javax.swing.JTextField Copper;
    private javax.swing.JTextField Curium;
    private javax.swing.JTextField Darmstadtium;
    private javax.swing.JTextField Dubnium;
    private javax.swing.JTextField Dysprosium;
    private javax.swing.JTextField Einsteinium;
    private javax.swing.JTextField Erbium;
    private javax.swing.JTextField Europium;
    private javax.swing.JTextField Fermium;
    private javax.swing.JTextField Flerovium;
    private javax.swing.JTextField Fluorine;
    private javax.swing.JTextField Francium;
    private javax.swing.JTextField Gadolinium;
    private javax.swing.JTextField Galium;
    private javax.swing.JTextField Germanium;
    private javax.swing.JTextField Gold;
    private javax.swing.JTextField Hafnium;
    private javax.swing.JTextField Hassium;
    private javax.swing.JTextField Helium;
    private javax.swing.JTextField Holmium;
    private javax.swing.JTextField Hydrogen;
    private javax.swing.JTextField Indium;
    private javax.swing.JTextField Iodine;
    private javax.swing.JTextField Iridium;
    private javax.swing.JTextField Iron;
    private javax.swing.JTextField Krypton;
    private javax.swing.JTextField Lanthanum;
    private javax.swing.JTextField Lawrencium;
    private javax.swing.JTextField Lead;
    private javax.swing.JTextField Lithium;
    private javax.swing.JTextField Livermorium;
    private javax.swing.JTextField Lutetium;
    private javax.swing.JTextField Magnesium;
    private javax.swing.JTextField Manganese;
    private javax.swing.JTextField Meitnerium;
    private javax.swing.JTextField Mendelevium;
    private javax.swing.JTextField Mercury;
    private javax.swing.JTextField Molybdenum;
    private javax.swing.JTextField Moscovium;
    private javax.swing.JTextField Neodymium;
    private javax.swing.JTextField Neon;
    private javax.swing.JTextField Neptunium;
    private javax.swing.JTextField Nickel;
    private javax.swing.JTextField Nihonium;
    private javax.swing.JTextField Niobium;
    private javax.swing.JTextField Nitrogen;
    private javax.swing.JTextField Nobelium;
    private javax.swing.JTextField Oganesson;
    private javax.swing.JTextField Osmium;
    private javax.swing.JTextField Oxygen;
    private javax.swing.JTextField Palladium;
    private javax.swing.JTextField Phosphorus;
    private javax.swing.JTextField Platnium;
    private javax.swing.JTextField Plutonium;
    private javax.swing.JTextField Polonium;
    private javax.swing.JTextField Potassium;
    private javax.swing.JTextField Praseodymium;
    private javax.swing.JTextField Promethium;
    private javax.swing.JTextField Protactinium;
    private javax.swing.JTextField Radium;
    private javax.swing.JTextField Radon;
    private javax.swing.JTextField Rhenium;
    private javax.swing.JTextField Rhodium;
    private javax.swing.JTextField Roentgenium;
    private javax.swing.JTextField Rubidium;
    private javax.swing.JTextField Ruthenium;
    private javax.swing.JTextField Rutherfordium;
    private javax.swing.JTextField Samarium;
    private javax.swing.JTextField Scandium;
    private javax.swing.JTextField Seaborgium;
    private javax.swing.JTextField Selenium;
    private javax.swing.JTextField Silicon;
    private javax.swing.JTextField Silver;
    private javax.swing.JTextField Sodium;
    private javax.swing.JTextField Strontium;
    private javax.swing.JTextField Sulfur;
    private javax.swing.JTextField Tantalum;
    private javax.swing.JTextField Technetium;
    private javax.swing.JTextField Tellurium;
    private javax.swing.JTextField Tennessine;
    private javax.swing.JTextField Terbium;
    private javax.swing.JTextField Thallium;
    private javax.swing.JTextField Thorium;
    private javax.swing.JTextField Thullium;
    private javax.swing.JTextField Tin;
    private javax.swing.JTextField Titanium;
    private javax.swing.JTextField Tungsten;
    private javax.swing.JTextField Uranium;
    private javax.swing.JTextField Vanadium;
    private javax.swing.JTextField Xenon;
    private javax.swing.JTextField Ytterbium;
    private javax.swing.JTextField Yttrium;
    private javax.swing.JTextField Ziconium;
    private javax.swing.JTextField Zinc;
    private javax.swing.JLabel aHint;
    private javax.swing.JLabel aTip;
    private javax.swing.JButton abortChallenge;
    private javax.swing.JTextField elementNameHere;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JLabel jlabelidk;
    private javax.swing.JLabel score;
    private javax.swing.JButton startChallenge;
    private javax.swing.JLabel timer;
    // End of variables declaration//GEN-END:variables

    //This is the code that deals with the game timer loop. For every second that passes, this code is excuted again.
    @Override
    public void actionPerformed(ActionEvent ae) {
        //This is what allows the game timer to run. The timer is set to 420 seconds or 7 minutes to begin. Everyone second that passes causes this loop
        //to take a string of the timer, convert it to an integer, decrease it by one, and set that integer as the new time in seconds.
        String timerText = timer.getText();
        int time = Integer.parseInt(timerText);
        time -= 1;
        timer.setText(Integer.toString(time));

        //For every 20 seconds that passes:
        if (time == 20 || time == 40 || time == 60 || time == 80 || time == 100
                || time == 120 || time == 140 || time == 160 || time == 180 || time == 200
                || time == 220 || time == 240 || time == 260 || time == 280 || time == 300
                || time == 320 || time == 340 || time == 360 || time == 380 || time == 400) {

            //generate a new hint from this list of 90 of them.
            //This is a string array that allows players to see hints that can help them out with their guessing of the elements!
            String[] hints = {"Try going through the alphablet for element names!", "HOFBrINCL",
                "Some elements are named after famous chemists!",
                "America and a states in the south are element names.",
                "The three heaviest elements starting with C's!", "Kryptonite",
                "Some elements used in warheads and power plants.", "One is used in surgeries and another to treat cancer!",
                "Two elements are named after two far off planets in the solar system.", "You're going to be salty soon!",
                "Two words: Google Chrome.", "One element is named after the sea!", "Valuable metals!", "If under pressure, this element creates diamonds",
                "__________ poisoning.", "It stains your hands orange when you use it.", "Used in World War One as a chemical gas weapon.",
                "It used to be used in thermometers and dental amalgams", "A very conductive metal.", "One element sounds like the word 'stadium'.",
                "There is a trace amount of this gas in our atmosphere", "A poison starting with the lettre A.", "The three magnetic metals.",
                "The only element that starts with a 'V'.", "Sounds like 'Cadbury'", "Tin foil", "Anti____", "Indy cars", "An element named after Germany!",
                "Vladimir Putin would be proud!", "An element named after Europe", "A  t e c h y  element", "Almost sounds like 'Dungsten' hahahaha.",
                "A larger element that sounds like copper.", "There are particles of this in glass!", "It's in bananas!",
                "EXTREMELY REACTIVE ALKALI METAL", "An element that is could have been named after 'Babe Ruth'.", "Think of the smell of rotten eggs.",
                "It sounds like 'roadium'", "It sounds like it was named after Saruman.", "'Whole'mium",
                "Two similar sounding elements that start with a Y.", "It could have been named after a liver.", "One was named after California??",
                "Named after Thor perhaps?", "_______-ion batteries", "Literally it sounds like a garden made this name up! Ha! Herbs...",
                "This can make groundwater hard.", "This basic metal metls in your hand.", "It sounds like Halfmium",
                "There are only two elements starting with the letter Z.", "__________ foil", "It starts witn 'act'.", "This one sounds like 'paladins'.",
                "This element is a true bro.", "It's put in our water for the health of our teeth!", "The two main gases in our atmosphere!", "Think H2O.",
                "5 cents", "It sounds like 'Promethius'", "There are two elements that start with the sound 'neo'.", "An element that starts with 'Rub'",
                "Mercedes uses this gas in its headlights!", "A glow in the dark element that is pretty rad.", "English dubs.", "This element literally sounds like a potion name.",
                "Someone f e r m -ented this element.", "The cur___ to the disease!", "This element loves to *praise* people!", "This element starts the same way that 'dsylexia' starts.",
                "The  m a n  liest of elements.", "This element *hass* something to hide!", "Most elements end with 'ium' or 'mium'!", "The element was used in coloured light fixtures.",
                "Jewlery prospers from some of these element!", "These element is very  i r i  tated.", "Moly-denim", "It rhymes with 'lesson'.",
                "NYET or m e i t? Who knows my comrades?", "Thul of a boat? Or was it hull?", "Berkel? Merkel? No Merkel is too recent.", "Some elements end in 'um' or 'ine'",
                "We're 'Roen' together down the stream!", "The Sanctuary of *Selenity*", "Bearium", "Strongtium", "Mi Hoy Minoy!!!!", "Boron sounds like boring. This game is boringggg..."};

            //Every 20 seconds, a new random number is chosen. This random number allows a random hint to be displayed to the player, instead of a predicitable, periodic cycle.
            //This means that new hints should appear every so often and create a unique gameplay experience everytime. The same can occur multiple times in a row. This is an intended feature. 
            int randNum = (int) (Math.random() * (88 - 0 + 1)) + 0;
            aHint.setText(hints[randNum]);
        }

        //If the timer begins,
        if (time == 419) {

            //play the game music and display a time related tip.
            aTip.setText("You've got 7 minutes on the clock. Let's go go go!!!");
            try {
                //Be able to locate and play and audio files.
                music = new FileInputStream(new File("Kahoot! - 20 Second Countdown 2_3 Extended.wav"));
                audio = new AudioStream(music);
                AudioPlayer.player.start(audio);
            } catch (Exception e) {
                //Print out an error message if the file cannot be found/played.
                System.out.println("Music file cannot be played!");
                e.printStackTrace();
            }

            //Another time related tip at 5 minutes.
        } else if (time == 300) {
            aTip.setText("Well, it's been a bit since we started. How are you doing?");

            //Another time related tip at 4 minutes.
        } else if (time == 240) {
            aTip.setText("Don't worry! You've still got time! Four minutes is a lot... right?");

            //Play the second game music file.
        } else if (time == 230) {
            try {
                //Be able to locate and play and audio files.
                music = new FileInputStream(new File("Kahoot! - 20 Second Countdown 3_3 Extended.wav"));
                audio = new AudioStream(music);
                AudioPlayer.player.start(audio);
            } catch (Exception e) {
                //Print out an error message if the file cannot be found/played.
                System.out.println("Music file cannot be played!");
                e.printStackTrace();
            }

            //Another time related tip at 3 minutes.
        } else if (time == 180) {
            aTip.setText("Three minutes! So, how many do you have so far?");

            //Another time related tip at 2 minutes.
        } else if (time == 120) {
            aTip.setText("Oh, where did the time go? You have two minutes!!!");

            //Another time related tip at 1 minutes.    
        } else if (time == 60) {
            aTip.setText("I like stressing people out. I don't think you have even half of them yet, what a shame...");

            //Play the last game music file.
        } else if (time == 53) {
            try {
                //Be able to locate and play and audio files.
                music = new FileInputStream(new File("Kahoot! - 20 Second Countdown 1_3 Extended.wav"));
                audio = new AudioStream(music);
                AudioPlayer.player.start(audio);
            } catch (Exception e) {
                //Print out an error message if the file cannot be found/played.
                System.out.println("Music file cannot be played!");
                e.printStackTrace();
            }

            //Another time related tip at 30 seconds.
        } else if (time == 30) {
            aTip.setText("Uh oh... thirty seconds left! And I thought your chemistry knowledge was extensive!");

            //Another time related tip at 10 seconds.
        } else if (time == 10) {
            aTip.setText("10, 9, 8, 7, 6, 5, 4, 3, 2, 1, AND TIMES UP!");

            //When the timer has stopped:
        } else if (time == 0) {
            //Stop the game music.
            AudioPlayer.player.stop(audio);

            String scoreText = score.getText();
            int userScore = Integer.parseInt(scoreText);

            //Display the user's score and a congratulatory message! (At 0 points)
            if (userScore == 0) {
                aTip.setText("Your score is: " + userScore + ". Do you even have a heartbeat?");

                //(At 1-1000 points)
            } else if (userScore > 0 && userScore <= 1000) {
                aTip.setText("Your score is: " + userScore + ". I reckon you need a lot more practice!");

                //(At 1001-5000 points)
            } else if (userScore > 1000 && userScore <= 5000) {
                aTip.setText("Your score is: " + userScore + ". I mean, you've got the basics of chemistry down!");

                //(At 5001-25000 points)
            } else if (userScore > 5000 && userScore <= 25000) {
                aTip.setText("Your score is: " + userScore + ". Wow, you have the hang of this! Nice work!");

                //(At 25001-50000 points)
            } else if (userScore > 25000 && userScore <= 50000) {
                aTip.setText("Your score is: " + userScore + ". Stop it. You'll probably ace your chemistry classes!");

                //(At 50001-100000 points)
            } else if (userScore > 50000 && userScore <= 100000) {
                aTip.setText("Your score is: " + userScore + ". How on Earth are you so good at this?!");

                //(At 100001-149999 points)
            } else if (userScore > 100000 && userScore < 150000) {
                aTip.setText("Your score is: " + userScore + ". Here's your chemistry degree. Now stop showing off!");

                //If a perfect score is achieved:
            } else if (userScore == 150000) {
                aTip.setText("Your score is: " + userScore + ". A perfect score. The chemistry gods have been pleased.");

                //If the secret code is entered!:
            } else if (userScore >= 22112017) {
                aTip.setText("Your score is: " + userScore + ". You found the secret key word! I love you Veronica! <3 :')");
            }
        }

        //If the game timer hits zero or is below zero for some reason,
        if (time <= 0) {
            //Stop the game timer, reset the timer, score, hint box, text box, and all of the element boxes in order to allow a reset for the game.
            gameTimer.stop();

            timer.setText("420");

            score.setText("0");

            aHint.setText("");

            elementNameHere.setText("");

            Actinium.setForeground(Color.BLACK);
            Aluminium.setForeground(Color.BLACK);
            Americium.setForeground(Color.BLACK);
            Antimony.setForeground(Color.BLACK);
            Argon.setForeground(Color.BLACK);
            Arsenic.setForeground(Color.BLACK);
            Astatine.setForeground(Color.BLACK);
            Barium.setForeground(Color.BLACK);
            Berkelium.setForeground(Color.BLACK);
            Beryllium.setForeground(Color.BLACK);
            Bismuth.setForeground(Color.BLACK);
            Borhium.setForeground(Color.BLACK);
            Boron.setForeground(Color.BLACK);
            Bromine.setForeground(Color.BLACK);
            Cadmium.setForeground(Color.BLACK);
            Calcium.setForeground(Color.BLACK);
            Californium.setForeground(Color.BLACK);
            Carbon.setForeground(Color.BLACK);
            Cerium.setForeground(Color.BLACK);
            Cesium.setForeground(Color.BLACK);
            Chlorine.setForeground(Color.BLACK);
            Chromium.setForeground(Color.BLACK);
            Cobalt.setForeground(Color.BLACK);
            Copermicium.setForeground(Color.BLACK);
            Copper.setForeground(Color.BLACK);
            Curium.setForeground(Color.BLACK);
            Darmstadtium.setForeground(Color.BLACK);
            Dubnium.setForeground(Color.BLACK);
            Dysprosium.setForeground(Color.BLACK);
            Einsteinium.setForeground(Color.BLACK);
            Erbium.setForeground(Color.BLACK);
            Europium.setForeground(Color.BLACK);
            Fermium.setForeground(Color.BLACK);
            Flerovium.setForeground(Color.BLACK);
            Fluorine.setForeground(Color.BLACK);
            Francium.setForeground(Color.BLACK);
            Gadolinium.setForeground(Color.BLACK);
            Galium.setForeground(Color.BLACK);
            Germanium.setForeground(Color.BLACK);
            Gold.setForeground(Color.BLACK);
            Hafnium.setForeground(Color.BLACK);
            Hassium.setForeground(Color.BLACK);
            Helium.setForeground(Color.BLACK);
            Holmium.setForeground(Color.BLACK);
            Hydrogen.setForeground(Color.BLACK);
            Indium.setForeground(Color.BLACK);
            Iodine.setForeground(Color.BLACK);
            Iridium.setForeground(Color.BLACK);
            Iron.setForeground(Color.BLACK);
            Krypton.setForeground(Color.BLACK);
            Lanthanum.setForeground(Color.BLACK);
            Lawrencium.setForeground(Color.BLACK);
            Lead.setForeground(Color.BLACK);
            Lithium.setForeground(Color.BLACK);
            Livermorium.setForeground(Color.BLACK);
            Lutetium.setForeground(Color.BLACK);
            Magnesium.setForeground(Color.BLACK);
            Manganese.setForeground(Color.BLACK);
            Meitnerium.setForeground(Color.BLACK);
            Mendelevium.setForeground(Color.BLACK);
            Mercury.setForeground(Color.BLACK);
            Molybdenum.setForeground(Color.BLACK);
            Moscovium.setForeground(Color.BLACK);
            Neodymium.setForeground(Color.BLACK);
            Neon.setForeground(Color.BLACK);
            Neptunium.setForeground(Color.BLACK);
            Nickel.setForeground(Color.BLACK);
            Nihonium.setForeground(Color.BLACK);
            Niobium.setForeground(Color.BLACK);
            Nitrogen.setForeground(Color.BLACK);
            Nobelium.setForeground(Color.BLACK);
            Oganesson.setForeground(Color.BLACK);
            Osmium.setForeground(Color.BLACK);
            Oxygen.setForeground(Color.BLACK);
            Palladium.setForeground(Color.BLACK);
            Phosphorus.setForeground(Color.BLACK);
            Platnium.setForeground(Color.BLACK);
            Plutonium.setForeground(Color.BLACK);
            Polonium.setForeground(Color.BLACK);
            Potassium.setForeground(Color.BLACK);
            Praseodymium.setForeground(Color.BLACK);
            Promethium.setForeground(Color.BLACK);
            Protactinium.setForeground(Color.BLACK);
            Radium.setForeground(Color.BLACK);
            Radon.setForeground(Color.BLACK);
            Rhenium.setForeground(Color.BLACK);
            Rhodium.setForeground(Color.BLACK);
            Roentgenium.setForeground(Color.BLACK);
            Rubidium.setForeground(Color.BLACK);
            Ruthenium.setForeground(Color.BLACK);
            Rutherfordium.setForeground(Color.BLACK);
            Samarium.setForeground(Color.BLACK);
            Scandium.setForeground(Color.BLACK);
            Seaborgium.setForeground(Color.BLACK);
            Selenium.setForeground(Color.BLACK);
            Silicon.setForeground(Color.BLACK);
            Silver.setForeground(Color.BLACK);
            Sodium.setForeground(Color.BLACK);
            Strontium.setForeground(Color.BLACK);
            Sulfur.setForeground(Color.BLACK);
            Tantalum.setForeground(Color.BLACK);
            Technetium.setForeground(Color.BLACK);
            Tellurium.setForeground(Color.BLACK);
            Tennessine.setForeground(Color.BLACK);
            Terbium.setForeground(Color.BLACK);
            Thallium.setForeground(Color.BLACK);
            Thorium.setForeground(Color.BLACK);
            Thullium.setForeground(Color.BLACK);
            Tin.setForeground(Color.BLACK);
            Titanium.setForeground(Color.BLACK);
            Tungsten.setForeground(Color.BLACK);
            Uranium.setForeground(Color.BLACK);
            Vanadium.setForeground(Color.BLACK);
            Xenon.setForeground(Color.BLACK);
            Ytterbium.setForeground(Color.BLACK);
            Yttrium.setForeground(Color.BLACK);
            Ziconium.setForeground(Color.BLACK);
            Zinc.setForeground(Color.BLACK);
        }
    }
}
